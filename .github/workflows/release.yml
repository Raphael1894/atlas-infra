name: Semantic Release

on:
  push:
    branches:
      - main

permissions:
  contents: write   # ‚úÖ allows pushing tags & releases

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest tag
        id: get_tag
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "latest=$latest" >> $GITHUB_OUTPUT

      - name: Detect version bump
        id: bump
        run: |
          # Count total commits
          commit_count=$(git rev-list --count HEAD)

          # If no tag exists yet ‚Üí start at baseline 0.3.3
          if [ -z "${{ steps.get_tag.outputs.latest }}" ]; then
            major=0
            minor=3
            patch=3
            commits=$(git log --pretty=format:"%s")
          else
            # Extract version parts from latest tag
            IFS='.' read -r major minor patch build <<< "${{ steps.get_tag.outputs.latest }}"
            commits=$(git log ${{ steps.get_tag.outputs.latest }}..HEAD --pretty=format:"%s")
          fi

          # Detect bump type
          bump="none"
          if echo "$commits" | grep -qiE '^fix'; then bump="patch"; fi
          if echo "$commits" | grep -qiE '^feat'; then bump="minor"; fi
          if echo "$commits" | grep -qiE '^MAJOR'; then bump="major"; fi

          case $bump in
            major) major=$((major+1)); minor=0; patch=0 ;;
            minor) minor=$((minor+1)); patch=0 ;;
            patch) patch=$((patch+1)) ;;
            none)  ;; # no semantic bump, just update build number
          esac

          new="$major.$minor.$patch.$commit_count"
          echo "new=$new" >> $GITHUB_OUTPUT

      - name: Delete existing tag if present
        run: |
          tag="${{ steps.bump.outputs.new }}"
          if git rev-parse "$tag" >/dev/null 2>&1; then
            echo "‚ö†Ô∏è Tag $tag exists locally, deleting..."
            git tag -d "$tag"
          fi
          if git ls-remote --tags origin | grep -q "refs/tags/$tag"; then
            echo "‚ö†Ô∏è Tag $tag exists on remote, deleting..."
            git push origin :refs/tags/$tag
          fi

      - name: Create and push new tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ steps.bump.outputs.new }}
          git push origin ${{ steps.bump.outputs.new }}

      - name: Show new version
        run: echo "üöÄ Released version ${{ steps.bump.outputs.new }}"
