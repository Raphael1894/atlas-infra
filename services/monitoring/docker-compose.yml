services:
  prometheus:
    image: prom/prometheus:v2.55.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ${DATA_ROOT}/prometheus:/prometheus
    command: ["--config.file=/etc/prometheus/prometheus.yml"]
    labels:
      - traefik.enable=true
      - traefik.http.routers.prometheus.rule=Host(`${ATLAS_HOSTNAME}.${BASE_DOMAIN}`) && PathPrefix(`/prometheus`)
      - traefik.http.services.prometheus.loadbalancer.server.port=9090
      - traefik.http.routers.prometheus.middlewares=prometheus-strip
      - traefik.http.middlewares.prometheus-strip.stripprefix.prefixes=/prometheus
      - traefik.http.routers.prometheus.priority=10
    restart: unless-stopped
    networks:
      - atlas_net

  victoriametrics:
    image: victoriametrics/victoria-metrics:v1.103.0
    container_name: victoriametrics
    command:
      - "-storageDataPath=/victoria-metrics-data"
      - "-retentionPeriod=1y"
    volumes:
      - ${DATA_ROOT}/victoriametrics:/victoria-metrics-data
    labels:
      - traefik.enable=true
      - traefik.http.routers.victoria.rule=Host(`${ATLAS_HOSTNAME}.${BASE_DOMAIN}`) && PathPrefix(`/victoria`)
      - traefik.http.services.victoria.loadbalancer.server.port=8428
      - traefik.http.routers.victoria.middlewares=victoria-strip
      - traefik.http.middlewares.victoria-strip.stripprefix.prefixes=/victoria
      - traefik.http.routers.victoria.priority=10
    restart: unless-stopped
    networks:
      - atlas_net

  grafana:
    image: grafana/grafana:10.4.5
    container_name: grafana
    environment:
      - GF_SERVER_ROOT_URL=http://${ATLAS_HOSTNAME}.${BASE_DOMAIN}/grafana
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ${DATA_ROOT}/grafana:/var/lib/grafana
      - ./grafana-provisioning:/etc/grafana/provisioning
    labels:
      - traefik.enable=true
      - traefik.http.routers.grafana.rule=Host(`${ATLAS_HOSTNAME}.${BASE_DOMAIN}`) && PathPrefix(`/grafana`)
      - traefik.http.services.grafana.loadbalancer.server.port=3000
      - traefik.http.routers.grafana.middlewares=grafana-strip
      - traefik.http.middlewares.grafana-strip.stripprefix.prefixes=/grafana
      - traefik.http.routers.grafana.priority=10
    depends_on: [prometheus, victoriametrics]
    restart: unless-stopped
    networks:
      - atlas_net

  alertmanager:
    image: prom/alertmanager:v0.27.0
    container_name: alertmanager
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - ${DATA_ROOT}/alertmanager:/alertmanager
    labels:
      - traefik.enable=true
      - traefik.http.routers.alertmanager.rule=Host(`${ATLAS_HOSTNAME}.${BASE_DOMAIN}`) && PathPrefix(`/alerts`)
      - traefik.http.services.alertmanager.loadbalancer.server.port=9093
      - traefik.http.routers.alertmanager.middlewares=alertmanager-strip
      - traefik.http.middlewares.alertmanager-strip.stripprefix.prefixes=/alerts
      - traefik.http.routers.alertmanager.priority=10
    restart: unless-stopped
    networks:
      - atlas_net

  node_exporter:
    image: prom/node-exporter:v1.8.1
    container_name: node_exporter
    pid: host
    network_mode: host
    command:
      - --path.rootfs=/host
    volumes:
      - /:/host:ro,rslave
    restart: unless-stopped

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - "9323:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - atlas_net

networks:
  atlas_net:
    external: true
    name: ${ATLAS_DOCKER_NETWORK}
